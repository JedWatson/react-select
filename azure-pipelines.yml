variables:
  SourcesDirectory: '$(Build.SourcesDirectory)'
  Project: 'ReactSelect'
  BuildConfiguration: 'Release'
  Config: '--configuration=$(BuildConfiguration)'
  CakePathLocation: '$(System.DefaultWorkingDirectory)'
  ReportDir: '$(Common.TestResultsDirectory)\coverage_report'
  TagName: 'v$(Build.BuildNumber)'
  
stages: 
- stage: Build
  displayName: 'Build'
  jobs:
  - job: Build
    displayName: 'Build Job'
    timeoutInMinutes: 8
    pool:
      vmImage: 'windows-latest'
    steps:
    #Install Nuget version 5.2
    - task: NuGetToolInstaller@1
      displayName: 'Install NuGet'
      inputs:
        versionSpec: 5.2.x

    #Authenticate the machine with the private artifact repository
    - task: PythonScript@0
      displayName: 'Run a Python script'
      inputs:
        scriptPath: '$(System.DefaultWorkingDirectory)\authenticate.py'
        arguments: '"$(System.AccessToken)" git'

    #Restore the project packages
    - task: npmAuthenticate@0
      inputs:
        workingFile: '.npmrc'
        customEndpoint: 'NPM Authentication Token'

    - task: cake-build.cake.cake-build-task.Cake@0
      displayName: Install
      inputs:
        target: Install
        arguments: '--configuration=Release -Pipeline'

    - task: cake-build.cake.cake-build-task.Cake@0
      displayName: Build
      inputs:
        target: Build
        arguments: '--configuration=Release -Pipeline'

    - task: cake-build.cake.cake-build-task.Cake@0
      displayName: Tests
      inputs:
        target: Tests
        arguments: '--configuration=Release -Pipeline'
     
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)'
        artifact: 'artifacts'
        publishLocation: 'pipeline'
    

- stage: Deploy
  displayName: 'Deploy'
  jobs:
  - deployment: Deploy
    displayName: 'Deploy to npm private repository and creates a git release'
    timeoutInMinutes: 8
    pool:
      vmImage: 'windows-latest'
    environment: Automatic-Release
    strategy: 
      runOnce:
        deploy:
          steps:
          #Creates a Github release
          - task: GitHubRelease@1
            inputs:
              gitHubConnection: 'GitHub Release'
              repositoryName: '$(Build.Repository.Name)'
              action: 'create'
              target: '$(Build.SourceVersion)'
              tagSource: 'userSpecifiedTag'
              tag: '$(TagName)'
              changeLogCompareToRelease: 'lastFullRelease'
              changeLogType: 'commitBased'
          #Publishes the package into the private artifact repository    
          - task: Npm@1
            inputs:
              command: 'publish'
              workingDir: '$(Pipeline.Workspace)/artifacts/'
              publishRegistry: 'useFeed'
              publishFeed: 'd8b4d1eb-aeb3-4b5b-9b43-37b4fc985e2f'