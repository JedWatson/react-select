// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot - defaults 1`] = `
<SelectContainer
  clearValue={[Function]}
  cx={[Function]}
  getStyles={[Function]}
  getValue={[Function]}
  hasValue={false}
  innerProps={
    Object {
      "id": undefined,
      "onKeyDown": [Function],
    }
  }
  isDisabled={false}
  isFocused={false}
  isMulti={false}
  isRtl={false}
  options={Array []}
  selectOption={[Function]}
  selectProps={
    Object {
      "backspaceRemovesValue": true,
      "blurInputOnSelect": true,
      "captureMenuScroll": false,
      "closeMenuOnScroll": false,
      "closeMenuOnSelect": true,
      "components": Object {},
      "controlShouldRenderValue": true,
      "escapeClearsValue": false,
      "filterOption": [Function],
      "formatGroupLabel": [Function],
      "getOptionLabel": [Function],
      "getOptionValue": [Function],
      "isDisabled": false,
      "isLoading": false,
      "isMulti": false,
      "isOptionDisabled": [Function],
      "isRtl": false,
      "isSearchable": true,
      "loadingMessage": [Function],
      "maxMenuHeight": 300,
      "menuIsOpen": false,
      "menuPlacement": "bottom",
      "menuPosition": "absolute",
      "menuShouldBlockScroll": false,
      "menuShouldScrollIntoView": true,
      "minMenuHeight": 140,
      "noOptionsMessage": [Function],
      "openMenuOnClick": true,
      "openMenuOnFocus": false,
      "options": Array [],
      "pageSize": 5,
      "placeholder": "Select...",
      "screenReaderStatus": [Function],
      "styles": Object {},
      "tabIndex": "0",
      "tabSelectsValue": true,
    }
  }
  setValue={[Function]}
  theme={
    Object {
      "borderRadius": 4,
      "colors": Object {
        "danger": "#DE350B",
        "dangerLight": "#FFBDAD",
        "neutral0": "hsl(0, 0%, 100%)",
        "neutral10": "hsl(0, 0%, 90%)",
        "neutral20": "hsl(0, 0%, 80%)",
        "neutral30": "hsl(0, 0%, 70%)",
        "neutral40": "hsl(0, 0%, 60%)",
        "neutral5": "hsl(0, 0%, 95%)",
        "neutral50": "hsl(0, 0%, 50%)",
        "neutral60": "hsl(0, 0%, 40%)",
        "neutral70": "hsl(0, 0%, 30%)",
        "neutral80": "hsl(0, 0%, 20%)",
        "neutral90": "hsl(0, 0%, 10%)",
        "primary": "#2684FF",
        "primary25": "#DEEBFF",
        "primary50": "#B2D4FF",
        "primary75": "#4C9AFF",
      },
      "spacing": Object {
        "baseUnit": 4,
        "controlHeight": 38,
        "menuGutter": 8,
      },
    }
  }
>
  <A11yText
    aria-atomic="true"
    aria-live="polite"
    aria-relevant="additions text"
  />
  <Control
    clearValue={[Function]}
    cx={[Function]}
    getStyles={[Function]}
    getValue={[Function]}
    hasValue={false}
    innerProps={
      Object {
        "onMouseDown": [Function],
        "onTouchEnd": [Function],
      }
    }
    innerRef={[Function]}
    isDisabled={false}
    isFocused={false}
    isMulti={false}
    isRtl={false}
    menuIsOpen={false}
    options={Array []}
    selectOption={[Function]}
    selectProps={
      Object {
        "backspaceRemovesValue": true,
        "blurInputOnSelect": true,
        "captureMenuScroll": false,
        "closeMenuOnScroll": false,
        "closeMenuOnSelect": true,
        "components": Object {},
        "controlShouldRenderValue": true,
        "escapeClearsValue": false,
        "filterOption": [Function],
        "formatGroupLabel": [Function],
        "getOptionLabel": [Function],
        "getOptionValue": [Function],
        "isDisabled": false,
        "isLoading": false,
        "isMulti": false,
        "isOptionDisabled": [Function],
        "isRtl": false,
        "isSearchable": true,
        "loadingMessage": [Function],
        "maxMenuHeight": 300,
        "menuIsOpen": false,
        "menuPlacement": "bottom",
        "menuPosition": "absolute",
        "menuShouldBlockScroll": false,
        "menuShouldScrollIntoView": true,
        "minMenuHeight": 140,
        "noOptionsMessage": [Function],
        "openMenuOnClick": true,
        "openMenuOnFocus": false,
        "options": Array [],
        "pageSize": 5,
        "placeholder": "Select...",
        "screenReaderStatus": [Function],
        "styles": Object {},
        "tabIndex": "0",
        "tabSelectsValue": true,
      }
    }
    setValue={[Function]}
    theme={
      Object {
        "borderRadius": 4,
        "colors": Object {
          "danger": "#DE350B",
          "dangerLight": "#FFBDAD",
          "neutral0": "hsl(0, 0%, 100%)",
          "neutral10": "hsl(0, 0%, 90%)",
          "neutral20": "hsl(0, 0%, 80%)",
          "neutral30": "hsl(0, 0%, 70%)",
          "neutral40": "hsl(0, 0%, 60%)",
          "neutral5": "hsl(0, 0%, 95%)",
          "neutral50": "hsl(0, 0%, 50%)",
          "neutral60": "hsl(0, 0%, 40%)",
          "neutral70": "hsl(0, 0%, 30%)",
          "neutral80": "hsl(0, 0%, 20%)",
          "neutral90": "hsl(0, 0%, 10%)",
          "primary": "#2684FF",
          "primary25": "#DEEBFF",
          "primary50": "#B2D4FF",
          "primary75": "#4C9AFF",
        },
        "spacing": Object {
          "baseUnit": 4,
          "controlHeight": 38,
          "menuGutter": 8,
        },
      }
    }
  >
    <div
      class=" emotion-7"
    >
      <div
        class=" emotion-2"
      >
        <div
          class=" emotion-0"
        >
          Select...
        </div>
        <div
          class="emotion-1"
        >
          <div
            class=""
            style="display: inline-block;"
          >
            <input
              aria-autocomplete="list"
              autocapitalize="none"
              autocomplete="off"
              autocorrect="off"
              id="react-select-2-input"
              spellcheck="false"
              style="box-sizing: content-box; width: 2px; border: 0px; opacity: 1; outline: 0; padding: 0px;"
              tabindex="0"
              type="text"
              value=""
            />
            <div
              style="position: absolute; top: 0px; left: 0px; visibility: hidden; height: 0px; overflow: scroll; white-space: pre; font-family: -webkit-small-control; letter-spacing: normal; text-transform: none;"
            />
          </div>
        </div>
      </div>
      <div
        class=" emotion-6"
      >
        <span
          class=" emotion-3"
        />
        <div
          aria-hidden="true"
          class=" emotion-5"
        >
          <svg
            aria-hidden="true"
            class="emotion-4"
            focusable="false"
            height="20"
            viewBox="0 0 20 20"
            width="20"
          >
            <path
              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
</div>
`;
