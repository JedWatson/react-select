//
// Control
// ------------------------------

// Mixins

// base

.Select {
	position: relative;

	// preferred box model
	&,
	& div,
	& input,
	& span {
		.box-sizing(border-box);
	}

	// handle disabled state
	&.is-disabled > .Select-control {
		background-color: @select-input-bg-disabled;
		&:hover {
			box-shadow: none;
		}
	}
	&.is-disabled .Select-arrow-zone {
		cursor: default;
		pointer-events: none;
		opacity: 0.35;
	}
	& * {
    color: @black;
  }
}

.Select-control {
	background-color: @select-input-bg;
	cursor: default;
	display: table;
	border-spacing: 0;
	border-collapse: separate;
	height: @select-input-height;
	outline: none;
	overflow: hidden;
	position: relative;
	width: 100%;
  border: 0;
  border-bottom: 1px solid @gray-dark;
  border-radius: 0;

	.Select-input:focus {
		outline: none;
	}
}

.Select.is-focused ~ .section-heading {
	color: @magenta;
}

.Select.is-focused .Select-control {
	  border-bottom: 1px solid @magenta;
	  border-radius: 0;
}

.is-searchable {
	&.is-open > .Select-control {
		cursor: text;
	}
}

.is-open > .Select-control {
	.border-bottom-radius( 0 );
	background: @select-input-bg;
	border-color: darken(@select-input-border-color, 10%) @select-input-border-color lighten(@select-input-border-color, 5%);
}

.is-searchable {
	&.is-focused:not(.is-open) > .Select-control {
		cursor: text;
	}
}

.is-focused:not(.is-open) > .Select-control {
	// .Select-focus-state(@select-input-border-focus);
}

// placeholder
.Select-placeholder,
.Select--single > .Select-control .Select-value {
	bottom: 0;
	color: @select-input-placeholder;
	left: 0;
	line-height: @select-input-internal-height;
	padding-right: @select-padding-horizontal;
	padding-left: 0;
	position: absolute;
	right: 0;
	top: 0;

	// crop text
	max-width: 100%;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

.Select-placeholder {
  padding: 0;
  font-size: @font-size-base;
  /* FF 4-18 */
  font-weight: 300;
  line-height: 18px;
  color: @gray-dark;
}

.Select-value:hover .Select-value-icon, {
	color: @magenta;
	&:hover {
		color: @magenta;
	}
}

.has-value.Select--single > .Select-control .Select-value,
.has-value.is-pseudo-focused.Select--single > .Select-control .Select-value {
	.Select-value-label {
		color: @select-text-color;
	}
	a.Select-value-label {
		cursor: pointer;
		text-decoration: none;
	}
}

.has-value.Select--single .Select-clear {
	display: none;
}


// the <input> element users type in

.Select-input {
	// inherits `display: inline-block` from "react-input-autosize"
	height: @select-input-internal-height;
	vertical-align: middle;
	padding: 0 !important;

	> input {
		width: 100%;
		background: none transparent;
		border: 0 none;
		box-shadow: none;
		cursor: default;
		display: inline-block;
		font-family: inherit;
		font-size: inherit;
		margin: 0;
		outline: none;
		color: @magenta;
		text-shadow: 0px 0px 0px @black;
    -webkit-text-fill-color: transparent;
		line-height: 14px;  /* For IE 8 compatibility */
		padding: ((@select-input-internal-height - 14) / 2 - 2) 0 ((@select-input-internal-height - 14) / 2 + 2);  /* For IE 8 compatibility */
		-webkit-appearance: none;
		.is-focused & {
			cursor: text;
		}
	}
}

// fake-hide the input when the control is pseudo-focused
.has-value.is-pseudo-focused .Select-input {
	opacity: 0;
}

.has.value.is-Searchable .Select-input {
	vertical-align: bottom;
}

// fake input
.Select-control:not(.is-searchable) > .Select-input {
	outline: none;
}

// loading indicator
.Select-loading-zone {
	cursor: pointer;
	display: table-cell;
	position: relative;
	text-align: center;
	vertical-align: middle;
	width: @select-loading-size;
}
.Select-loading {
	.Select-spinner(@select-loading-size, @select-loading-color-bg, @select-loading-color);
	vertical-align: middle;
}


// the little cross that clears the field

.Select-clear-zone {
	.animation( Select-animation-fadeIn 200ms );
	color: @select-clear-color;
	cursor: pointer;
	display: table-cell;
	position: relative;
	text-align: center;
	vertical-align: middle;
	width: @select-clear-width;

	&:hover {
		color: @select-clear-hover-color;
	}
}
.Select-clear {
	color: @gray-dark;
	display: inline-block;
	font-size: @select-clear-size;
	line-height: 1;
}
.Select--multi .Select-clear-zone {
	width: @select-clear-width;
}


// arrow indicator

.Select-arrow-zone {
	cursor: pointer;
	display: table-cell;
	position: relative;
	text-align: center;
	vertical-align: middle;
	width: (@select-arrow-width * 5);
	padding-right: @select-arrow-width;
}

.Select-arrow {
	display:inline-block!important;
	position:relative;
	width: 8px;
	height: 8px;
	border-radius: 100%;
	box-sizing:content-box;
}
.Select-arrow:before {
	position: absolute;
	content: '';
	border-bottom: 2px solid @gray-dark;
	border-right: 2px solid @gray-dark;
	width: 8px;
	height: 8px;
	transform: rotate(45deg);
	bottom: 4px;
}


.is-open .Select-arrow,
.Select-arrow-zone:hover > .Select-arrow {
	border-top-color: @select-arrow-color-hover;
}

.is-open .Select-arrow:before {
	border: 0;
	border-top: 2px solid @magenta;
	border-right: 2px solid @magenta;
	transform: rotate(-45deg);
	bottom: -4px;
}

.Select--multi .Select-multi-value-wrapper {
  display: inline-block;
}
.Select .Select-aria-only {
  display: inline-block;
  height: 1px;
  width: 1px;
  margin: -1px;
  clip: rect(0,0,0,0);
  overflow: hidden;
  float: left;
}

.Select-menu-outer {
  width: 100%;
  .Select-menu {
    .Select-option.is-focused {
      color: @white;
      background-color: @black;
    }
  }
}

// .Select.Select-transparent {
.Select-transparent {
  .Select-control {
    border-color:  @gray;
    background-color: transparent;
  }
  & * {
    color: @white;
    background-color: transparent;
  }
  .Select--multi .Select-value {
    border-color: @white;
  }
  .Select-placeholder,
  .Select .Select-value-label {
    color: @white !important;
  }
  .Select-clear,
  .Select-arrow:before {
  	color: @gray !important;
  }
  .Select-menu-outer {
 		background-color: @gray !important;
	  width: 100%;
	  .Select-menu {
  		background-color: @gray !important;
	    .Select-option.is-focused {
	      color: @black;
	      background-color: @white;
	    }
	    input {
	    	text-shadow: 0px 0px 0px @white;
	    }
	  }
	}
}

// Animation
// ------------------------------

// fade in

@-webkit-keyframes Select-animation-fadeIn {
	from { opacity: 0; }
	to { opacity: 1; }
}
@keyframes Select-animation-fadeIn {
	from { opacity: 0; }
	to { opacity: 1; }
}




